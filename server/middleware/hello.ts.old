import type { MyFormData } from "~/utils/form-data";
import { useMyFormData } from "~/utils/form-data"

export default defineEventHandler(async (event) => {
  if (event.method !== 'POST') {
    return
  }

  try {
      // Check if it's a multipart form request
      const contentType = event.headers.get('content-type') || ''
      if (!contentType.includes('multipart/form-data')) {
        return
      }
  
      // Read multipart form data
      const formData = await readMultipartFormData(event)
      if (!formData) {
        return
      }
  
      // Process form data
      const processedData: MyFormData = {}
      
      formData.forEach(part => {
        if (part.name) {
          processedData[part.name] = part.data.toString()
        }
      })
  
      // Store in useState for components to access
      const formDataState = useMyFormData()
      formDataState.value = processedData
    } catch (error) {
      console.error('Error processing form data:', error)
      // Optionally store error in state
      const formError = useState('form-error', () => '')
      formError.value = 'Error processing form data'
    }
})
